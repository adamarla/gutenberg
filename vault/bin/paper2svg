#!/bin/bash 

let cut_top=1
let cut_bottom=1
let cut_left=1
let cut_right=1

while getopts "l:t:r:b:" option ; do 
  case $option in 
    t) cut_top=$OPTARG ;;
    l) cut_left=$OPTARG ;;
    r) cut_right=$OPTARG ;;
    b) cut_bottom=$OPTARG ;;
    \?) exit 1 ;;
  esac
done 

# Get the last argument = TeX filename 
shift $((OPTIND-1))
fname=$(basename $1 | cut -d'.' -f1)
author=$(pdfinfo $1 | grep Creator | sed -e "s/Creator:[[:space:]]*//g")

# author = TeX if generated by pdflatex OR dvipdf OR ps2pdf 

if [[ $author == "TeX" || $author =~ ^dvips ]] ; then 
  # Output: tex-%d.svg 

  echo "TeX" 
  pdf2svg $1 $fname-%d.svg all 
  for f in `ls $fname*.svg` ; do 
    n=$(basename $f | cut -d'.' -f1 | cut -d'-' -f2)
    svgclip.py -o tex-$n.svg $f 
    rm -f $f 
  done 
else
  # Output: prefab-%d.svg 

  pdftoppm $1 pdf 

  for f in `ls pdf-*.ppm` ; do 
    n=$(basename $f | cut -d'.' -f1 | cut -d'-' -f2)
    
    # First Pass: PDF -> Trimmed PPM 

    potrace -g --tight $f 
    pgmfile=pdf-$n.pgm

    dimensions=$(head -n3 $pgmfile | tail -n1)
    width=$(echo $dimensions | cut -d' ' -f1)
    height=$(echo $dimensions | cut -d' ' -f2)

    #echo "width = $width, height = $height"

    let "left = ($width * $cut_left) / 100"
    let "right = $width * (100-$cut_right) / 100"
    let "top = $height * $cut_top / 100" 
    let "bottom = $height * (100 - $cut_bottom)/ 100" 

    #echo "top = $top, bottom = $bottom, left = $left, right = $right" 
    pamcut -left $left -right $right -bottom $bottom -top $top $pgmfile > prefab-$n.pgm

    # Second Pass: Run potrace again to get cropped SVG
    potrace -s --tight --group -r 300 prefab-$n.pgm
  done 

  # Clean up 
  rm -f pdf-*.ppm prefab-*.pgm pdf-*.pgm 
fi 


